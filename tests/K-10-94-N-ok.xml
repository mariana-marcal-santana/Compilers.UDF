<sequence_node size='4'>
  <function_declaration_node name='g' qualifier='private' type='integer'>
  <arguments>
      <sequence_node size='1'>
        <variable_declaration_node name='s' qualifier='private' type='string'>
        </variable_declaration_node>
      </sequence_node>
  </arguments>
  </function_declaration_node>
  <function_definition_node name='f' qualifier='private' type='integer'>
  <arguments>
      <sequence_node size='1'>
        <variable_declaration_node name='s' qualifier='private' type='string'>
        </variable_declaration_node>
      </sequence_node>
  </arguments>
    <block_node>
      <instructions>
        <sequence_node size='2'>
          <evaluation_node>
            <function_call_node name='g'>
              <arguments>
                <sequence_node size='1'>
                  <rvalue_node>
                      <variable_node>s</variable_node>
                  </rvalue_node>
                </sequence_node>
              </arguments>
            </function_call_node>
          </evaluation_node>
          <return_node>
            <retval>
              <integer_node>10</integer_node>
            </retval>
          </return_node>
        </sequence_node>
      </instructions>
    </block_node>
  </function_definition_node>
  <function_definition_node name='g' qualifier='private' type='integer'>
  <arguments>
      <sequence_node size='1'>
        <variable_declaration_node name='s' qualifier='private' type='string'>
        </variable_declaration_node>
      </sequence_node>
  </arguments>
    <block_node>
      <instructions>
        <sequence_node size='2'>
          <write_node>
            <args>
              <sequence_node size='1'>
                <rvalue_node>
                    <variable_node>s</variable_node>
                </rvalue_node>
              </sequence_node>
            </args>
            <newline>
              true
            </newline>
          </write_node>
          <return_node>
            <retval>
              <integer_node>14</integer_node>
            </retval>
          </return_node>
        </sequence_node>
      </instructions>
    </block_node>
  </function_definition_node>
  <function_definition_node name='udf' qualifier='public' type='integer'>
  <arguments>
      <sequence_node size='0'>
      </sequence_node>
  </arguments>
    <block_node>
      <instructions>
        <sequence_node size='2'>
          <write_node>
            <args>
              <sequence_node size='1'>
                <function_call_node name='f'>
                  <arguments>
                    <sequence_node size='1'>
                      <string_node>ola</string_node>
                    </sequence_node>
                  </arguments>
                </function_call_node>
              </sequence_node>
            </args>
            <newline>
              true
            </newline>
          </write_node>
          <return_node>
            <retval>
              <integer_node>0</integer_node>
            </retval>
          </return_node>
        </sequence_node>
      </instructions>
    </block_node>
  </function_definition_node>
</sequence_node>
